// Code generated by ent, DO NOT EDIT.

package taskcontext

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the taskcontext type in the database.
	Label = "task_context"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldRetryCount holds the string denoting the retrycount field in the database.
	FieldRetryCount = "retry_count"
	// FieldMaxRetry holds the string denoting the maxretry field in the database.
	FieldMaxRetry = "max_retry"
	// Table holds the table name of the taskcontext in the database.
	Table = "task_contexts"
)

// Columns holds all SQL columns for taskcontext fields.
var Columns = []string{
	FieldID,
	FieldRetryCount,
	FieldMaxRetry,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultRetryCount holds the default value on creation for the "RetryCount" field.
	DefaultRetryCount int
	// DefaultMaxRetry holds the default value on creation for the "MaxRetry" field.
	DefaultMaxRetry int
)

// OrderOption defines the ordering options for the TaskContext queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByRetryCount orders the results by the RetryCount field.
func ByRetryCount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRetryCount, opts...).ToFunc()
}

// ByMaxRetry orders the results by the MaxRetry field.
func ByMaxRetry(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMaxRetry, opts...).ToFunc()
}
